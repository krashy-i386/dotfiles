#!/usr/bin/env bash

## Credit to okk: https://github.com/okklol/herblufstwm/
## Configurations --------------------------------------------#

hc() {
    herbstclient "$@"
}

hc emit_hook reload

## Autostart -------------------------------------------------#

bash ~/.config/herbstluftwm/bin/autostart.sh

## keybindings -----------------------------------------------#

# remove all existing keybindings
hc keyunbind --all

# if you have a super key you will be much happier with Mod set to Mod4
Mod=Mod4   # Use the super key as the main modifier
Alt=Mod1   # Use alt as another modifier

# terminals
TERMINAL=kitty
hc keybind $Mod-Return spawn $TERMINAL

# applications
TEXT_EDITOR=nvim
WEB_BROWSER=firefox
hc keybind $Mod-Shift-e spawn "$TERMINAL" "-e" "$TEXT_EDITOR"
hc keybind $Mod-Shift-w spawn $WEB_BROWSER

# rofi and dmenu (only if rofi breaks)
ROFI="rofi -show drun"
POWERMENU="rofi -show power-menu -modi power-menu:~/.config/rofi/bin/rofi-power-menu"
DMENU="dmenu_run"
hc keybind $Mod-r spawn $ROFI
hc keybind $Mod-c spawn $DMENU
hc keybind $Mod-Escape spawn $POWERMENU


# function keys
SINK=1
hc keybind XF86MonBrightnessUp 		spawn "brightness" "--inc"
hc keybind XF86MonBrightnessDown 	spawn "brightness" "--dec"
hc keybind XF86AudioRaiseVolume 	spawn "pamixer" "-i" "5"
hc keybind XF86AudioLowerVolume 	spawn "pamixer" "-d" "5"
hc keybind XF86AudioMute 			spawn "pamixer" "-t"
hc keybind XF86AudioNext 			spawn "playerctl" "next"
hc keybind XF86AudioPrev 			spawn "playerctl" "previous"
hc keybind XF86AudioPlay 			spawn "playerctl" "play-pause"
hc keybind XF86AudioStop 			spawn "playerctl" "stop"

# screenshots
hc keybind Print    spawn "flameshot" "gui"

# window manager
LOCK="betterlockscreen -l dimblur --display 1"
hc keybind $Mod-Shift-q quit
hc keybind $Mod-Shift-r reload
hc keybind $Mod-q close
hc keybind $Mod-x spawn $LOCK

# focusing clients, basic movement in tiling and floating mode
hc keybind $Mod-Left  focus left
hc keybind $Mod-Down  focus down
hc keybind $Mod-Up    focus up
hc keybind $Mod-Right focus right
hc keybind $Mod-h     focus left
hc keybind $Mod-j     focus down
hc keybind $Mod-k     focus up
hc keybind $Mod-l     focus right

# moving clients in tiling and floating mode
hc keybind $Mod-Shift-Left  shift left
hc keybind $Mod-Shift-Down  shift down
hc keybind $Mod-Shift-Up    shift up
hc keybind $Mod-Shift-Right shift right
hc keybind $Mod-Shift-h     shift left
hc keybind $Mod-Shift-j     shift down
hc keybind $Mod-Shift-k     shift up
hc keybind $Mod-Shift-l     shift right

# resizing frames and floating clients
resizestep=0.02
hc keybind $Mod-Control-h       resize left +$resizestep
hc keybind $Mod-Control-j       resize down +$resizestep
hc keybind $Mod-Control-k       resize up +$resizestep
hc keybind $Mod-Control-l       resize right +$resizestep
hc keybind $Mod-Control-Left    resize left +$resizestep
hc keybind $Mod-Control-Down    resize down +$resizestep
hc keybind $Mod-Control-Up      resize up +$resizestep
hc keybind $Mod-Control-Right   resize right +$resizestep

# splitting frames, create an empty frame at the specified direction
hc keybind $Mod-u       split   bottom  0.5
hc keybind $Mod-o       split   right   0.5
# let the current frame explode into subframes
hc keybind $Mod-Control-s split explode
hc keybind $Mod-d remove

# focus
hc keybind $Mod-BackSpace   cycle_monitor
hc keybind $Mod-Tab         cycle_all +1
hc keybind $Mod-Shift-Tab   cycle_all -1
hc keybind $Mod-b cycle
hc keybind $Mod-i jumpto urgent

## Mouse -----------------------------------------------------#

hc mouseunbind --all
hc mousebind $Mod-Button1 move
hc mousebind $Mod-Button2 zoom
hc mousebind $Mod-Button3 resize

## Tags ------------------------------------------------------#

tag_names=( {1..9} )
tag_keys=( {1..9} 0 )

hc rename default "${tag_names[0]}" || true
for i in "${!tag_names[@]}" ; do
    hc add "${tag_names[$i]}"
    key="${tag_keys[$i]}"
    if ! [ -z "$key" ] ; then
        hc keybind "$Mod-$key" use_index "$i"
        hc keybind "$Mod-Shift-$key" move_index "$i"
    fi
done

# cycle through tags
hc keybind $Mod-period use_index +1 --skip-visible
hc keybind $Mod-comma  use_index -1 --skip-visible

## Layouts ---------------------------------------------------#

hc keybind $Mod-f fullscreen toggle
hc keybind $Mod-Shift-space set_attr clients.focus.floating toggle
hc keybind $Mod-space floating toggle

hc keybind $Mod-Shift-m set_attr clients.focus.minimized true
hc keybind $Mod-Control-m jumpto last-minimized

hc keybind $Mod-g pseudotile toggle

# The following cycles through the available layouts within a frame, but skips
# layouts, if the layout change wouldn't affect the actual window positions.
# I.e. if there are two windows within a frame, the grid layout is skipped.
hc keybind $Mod-Control-space                                                           \
            or , and . compare tags.focus.curframe_wcount = 2                   \
                     . cycle_layout +1 vertical horizontal max vertical grid    \
               , cycle_layout +1

## Window rules ----------------------------------------------#

hc unrule -F
hc rule focus=on # normally focus new clients
hc rule floatplacement=smart

hc rule windowtype~'_NET_WM_WINDOW_TYPE_(DIALOG|UTILITY|SPLASH)' floating=on
hc rule windowtype='_NET_WM_WINDOW_TYPE_DIALOG' focus=on
hc rule windowtype~'_NET_WM_WINDOW_TYPE_(NOTIFICATION|DOCK|DESKTOP)' manage=off

hc rule class~'(obs)' focus=on floating=on
hc rule class~'(Lxappearance|Nitrogen)' focus=on floating=on
hc rule class~'(Pavucontrol|Xfce4-power-manager-settings)' focus=on floating=on
hc rule class~'(feh|Sxiv|Gimp*)' focus=on floating=on

hc set tree_style '╾│ ├└╼─┐'

# unlock, just to be sure
hc unlock

# do multi monitor setup here, e.g.:
hc set_monitors 1920x1080+0+0 1920x1080+1920+0
# or simply:
# hc detect_monitors

## Theme -----------------------------------------------------#

# the frame
hc attr theme.tiling.reset 1
hc attr theme.floating.reset 1

hc set always_show_frame on
hc set frame_border_width 4
hc set frame_bg_transparent on
hc set frame_transparent_width 0
hc set frame_gap 10

hc set frame_border_active_color '#EEEEEE'
hc set frame_border_normal_color '#262626'
hc set frame_bg_normal_color '#262626'
hc set frame_bg_active_color '#EEEEEE'

# containers
hc attr theme.title_font 'Fira Code:pixelsize=13'
hc attr theme.title_height 20
hc attr theme.padding_top 10  # space below the title's baseline (i.e. text depth)
hc attr theme.title_align center
hc attr theme.inner_width 0
hc attr theme.active.outer_width 0
hc attr theme.inner_color black
hc attr theme.border_width 0
hc attr theme.floating.border_width 0
hc attr theme.floating.outer_width 0

hc attr theme.active.color '#F5C2E7'
hc attr theme.title_color '#F5C2E7'
hc attr theme.normal.color '#E8A2AF'
hc attr theme.urgent.color '#F28FAD'
hc attr theme.normal.title_color '#E8A2AF'
hc attr theme.urgent.title_color '#F28FAD'
hc attr theme.floating.outer_color black
hc attr theme.active.inner_color '#EEEEEE'
hc attr theme.urgent.inner_color '#D34651'
hc attr theme.normal.inner_color '#DADADA'
hc attr theme.background_color '#262626'

# copy inner color to outer_color
for state in active urgent normal ; do
    hc substitute C theme.${state}.inner_color \
        attr theme.${state}.outer_color C
done

hc set window_gap 20
hc set frame_padding 0
hc set smart_window_surroundings off
hc set smart_frame_surroundings on
hc set mouse_recenter_gap 0
